{"version":3,"sources":["app/actions/actionTypes.js","app/actions/playersActions.js","app/components/Board.jsx","app/components/Card.jsx","app/components/CardShirt.jsx","app/components/Player.jsx","app/components/PlayersAmount.jsx","app/container/App.jsx","app/container/CardsBlock.jsx","app/container/Options.jsx","app/container/PokerTable.jsx","app/initialize.js","app/reducers/playersReducers.js","app/utils/cards.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,wEAAgC,+BAAtC;;;;;;;;;ACAA,IAAM,8CAAmB,SAAnB,gBAAmB,CAAC,aAAD;AAAA,SAAoB;AAClD,UAAM,oBAD4C;AAElD;AAFkD,GAApB;AAAA,CAAzB;;;;;;;;;;ACAP;;;;AAEA;;;;;;kBAEe,YAAM;AACnB,SAAO;AAAA;AAAA,MAAK,WAAU,OAAf;AACL,4DADK;AAEL,4DAFK;AAGL,4DAHK;AAIL,4DAJK;AAKL;AALK,GAAP;AAOD,C;;;;;;;;;;ACZD;;;;;;kBAEe,gBAAc;AAAA,MAAX,IAAW,QAAX,IAAW;;AAC3B,SAAO;AAAA;AAAA,MAAK,WAAU,MAAf;AACL,2CAAK,KAAK,IAAV;AADK,GAAP;AAGD,C;;;;;;;;;;ACND;;;;;;kBAEe,YAAM;AACnB,SAAO,uCAAK,WAAU,WAAf,GAAP;AACD,C;;;;;;;;;;ACJD;;;;AAEA;;;;;;kBAEe,gBAAc;AAAA,MAAZ,MAAY,QAAZ,MAAY;;AAC3B,MAAM,YAAY,YAAY,MAA9B;AACA,MAAM,aAAa,WAAW,MAA9B;;AAEA,SAAO;AAAA;AAAA,MAAK,WAAW,SAAhB;AACL;AAAA;AAAA,QAAK,WAAU,MAAf;AACE,8DADF;AAEE;AAFF,KADK;AAKL;AAAA;AAAA,QAAK,WAAU,YAAf;AAA6B;AAA7B;AALK,GAAP;AAOD,C;;;;;;;;;;ACfD;;;;;;AAEA,IAAM,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAtB;;kBAEe,gBAAM,WAAN,CAAkB;AAAA;;AAC/B,aAAW;AACT,2BAAuB,gBAAM,SAAN,CAAgB,IAAhB,CAAqB,UADnC;AAET,mBAAe,gBAAM,SAAN,CAAgB,MAAhB,CAAuB;AAF7B,GADoB;;AAM/B,qBAN+B,iCAMT;AACpB,QAAM,QAAQ,KAAK,IAAL,CAAU,aAAV,CAAwB,KAAtC;AACA,SAAK,KAAL,CAAW,qBAAX,CAAiC,KAAjC;AACD,GAT8B;AAW/B,QAX+B,oBAWtB;AACP,WAAO;AAAA;AAAA,QAAQ,KAAI,eAAZ,EAA4B,OAAO,KAAK,KAAL,CAAW,aAA9C,EAA6D,UAAU,KAAK,mBAA5E;AACJ,oBAAc,GAAd,CAAkB;AAAA,eAAU;AAAA;AAAA,YAAQ,KAAK,MAAb,EAAqB,OAAO,MAA5B;AAAqC;AAArC,SAAV;AAAA,OAAlB;AADI,KAAP;AAGD;AAf8B,CAAlB,C;;;;;;;;;;ACJf;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,MAAM,gBAAM,WAAN,CAAkB;AAAA;AAC5B,QAD4B,oBACnB;AACP,WACE;AAAA;AAAA,QAAK,WAAU,WAAf;AACE;AAAA;AAAA,UAAK,WAAU,eAAf;AACE,iEADF;AAEE;AAFF,OADF;AAKE;AAAA;AAAA,UAAK,WAAU,sBAAf;AACE;AADF;AALF,KADF;AAWD;AAb2B,CAAlB,CAAZ;;AAgBA,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD;AAAA,SAAY;AAClC,mBAAe,MAAM;AADa,GAAZ;AAAA,CAAxB;;kBAIe,yBAAQ,eAAR,EAAyB,GAAzB,C;;;;;;;;;;AC3Bf;;;;AAEA;;;;AACA;;;;kBAEe,YAAM;AACnB,SAAO;AAAA;AAAA,MAAK,WAAU,YAAf;AACJ,iBAAM,GAAN,CAAU,gBAAQ;AACjB,aAAO;AAAA;AAAA,UAAK,WAAU,iBAAf;AACJ,sBAAO,GAAP,CAAW,iBAAS;AACnB,cAAM,OAAO,eAAe,KAAf,GAAuB,IAAvB,GAA8B,MAA3C;AACA,iBAAO,gDAAM,MAAM,IAAZ,GAAP;AACD,SAHA;AADI,OAAP;AAMD,KAPA;AADI,GAAP;AAUD,C;;;;;;;;;;AChBD;;;;AACA;;AACA;;AAEA;;;;;;AAEA,IAAM,UAAU,SAAV,OAAU,OAA4C;AAAA,MAA1C,qBAA0C,QAA1C,qBAA0C;AAAA,MAAnB,aAAmB,QAAnB,aAAmB;;AAC1D,SAAO;AAAA;AAAA,MAAK,WAAU,SAAf;AACL;AAAA;AAAA,QAAK,WAAU,eAAf;AACE;AAAA;AAAA;AAAA;AAAA,OADF;AAEE;AAAA;AAAA;AACE,iEAAe,uBAAuB,qBAAtC,EAA6D,eAAe,aAA5E;AADF;AAFF;AADK,GAAP;AAQD,CATD;;AAWA,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD;AAAA,SAAY;AAClC,mBAAe,MAAM;AADa,GAAZ;AAAA,CAAxB;;AAIA,IAAM,qBAAqB,SAArB,kBAAqB,CAAC,QAAD;AAAA,SAAe;AACxC,yBADwC,iCAClB,aADkB,EACH;AACnC,eAAS,sCAAiB,aAAjB,CAAT;AACD;AAHuC,GAAf;AAAA,CAA3B;;kBAMe,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,OAA7C,C;;;;;;;;;;AC3Bf;;;;AACA;;AAEA;;;;AACA;;;;;;;;AAEA,IAAM,aAAa,SAAb,UAAa,OAAqB;AAAA,MAAnB,aAAmB,QAAnB,aAAmB;;AACtC,MAAM,SAAS,SAAS,aAAT,EAAwB,EAAxB,CAAf;;AAEA,SAAO;AAAA;AAAA,MAAK,WAAU,YAAf;AACJ,iCAAI,MAAM,MAAN,CAAJ,GAAmB,GAAnB,CAAuB,UAAC,CAAD,EAAI,CAAJ;AAAA,aACtB,kDAAQ,QAAQ,IAAI,CAApB,GADsB;AAAA,KAAvB,CADI;AAIL;AAJK,GAAP;AAMD,CATD;;AAWA,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD;AAAA,SAAY;AAClC,mBAAe,MAAM;AADa,GAAZ;AAAA,CAAxB;;kBAIe,yBAAQ,eAAR,EAAyB,UAAzB,C;;;;;;ACrBf;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AACA;;;;;;AAEA,IAAM,QAAQ,kDAAd;;AAEA,SAAS,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,qBAAS,MAAT,CACE;AAAA;AAAA,MAAU,OAAO,KAAjB;AACE;AADF,GADF,EAIE,SAAS,aAAT,CAAuB,MAAvB,CAJF;AAMD,CAPD;;;;;;;;;;kBCNe,YAAuC;AAAA,MAA9B,KAA8B,yDAAtB,YAAsB;AAAA,MAAR,MAAQ;;AACpD,UAAQ,OAAO,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB,EAAC,eAAe,OAAO,aAAvB,EAAzB,CAAP;AACF;AACE,aAAO,KAAP;AAJJ;AAMD,C;;AAXD,IAAM,eAAe;AACnB,iBAAe;AADI,CAArB;;;;;;;;;ACAO,IAAM,0BAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAAf;AACA,IAAM,wBAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAd","file":"public/app.js","sourcesContent":["export const CHANGE_PLAYERS_AMOUNT_SUCCESS = 'CHANGE_PLAYERS_AMOUNT_SUCCESS';\n","export const setPlayersAmount = (playersAmount) => ({\n  type: 'SET_PLAYERS_AMOUNT',\n  playersAmount\n});\n","import React from 'react';\n\nimport CardShirt from './CardShirt';\n\nexport default () => {\n  return <div className=\"Board\">\n    <CardShirt />\n    <CardShirt />\n    <CardShirt />\n    <CardShirt />\n    <CardShirt />\n  </div>\n}\n","import React from 'react'\n\nexport default ({ path }) => {\n  return <div className=\"Card\">\n    <img src={path}></img>\n  </div>\n}\n","import React from 'react';\n\nexport default () => {\n  return <div className=\"CardShirt\"></div>\n}\n","import React from 'react';\n\nimport CardShirt from './CardShirt';\n\nexport default ({number}) => {\n  const className = 'Player-' + number;\n  const playerName = 'Player' + number;\n\n  return <div className={className}>\n    <div className=\"Hand\">\n      <CardShirt />\n      <CardShirt />\n    </div>\n    <div className=\"PlayerName\">{playerName}</div>\n  </div>;\n}\n","import React from 'react';\n\nconst playersAmount = [2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default React.createClass({\n  propTypes: {\n    onPlayersAmountChange: React.PropTypes.func.isRequired,\n    playersAmount: React.PropTypes.number.isRequired\n  },\n\n  changePlayersAmount() {\n    const value = this.refs.playersAmount.value;\n    this.props.onPlayersAmountChange(value);\n  },\n\n  render() {\n    return <select ref=\"playersAmount\" value={this.props.playersAmount} onChange={this.changePlayersAmount}>\n      {playersAmount.map(amount => <option key={amount} value={amount}>{amount}</option>)}\n    </select>\n  }\n});\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport CardsBlock from './CardsBlock';\nimport PokerTable from './PokerTable';\nimport Options from './Options';\n\nconst App = React.createClass({\n  render() {\n    return (\n      <div className=\"Container\">\n        <div className=\"CardsAndTable\">\n          <CardsBlock />\n          <PokerTable />\n        </div>\n        <div className=\"OptionsAndStatistics\">\n          <Options />\n        </div>\n      </div>\n    );\n  }\n});\n\nconst mapStateToProps = (state) => ({\n  playersAmount: state.playersAmount\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\n\nimport Card from 'components/Card';\nimport {values, suits} from 'utils/cards';\n\nexport default () => {\n  return <div className=\"CardsBlock\">\n    {suits.map(suit => {\n      return <div className=\"CardsBlock-suit\">\n        {values.map(value => {\n          const path = 'img/cards/' + value + suit + '.png';\n          return <Card path={path} />;\n        })}\n      </div>;\n    })}\n  </div>;\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {setPlayersAmount} from 'actions/playersActions';\n\nimport PlayersAmount from 'components/PlayersAmount';\n\nconst Options = ({onPlayersAmountChange, playersAmount}) => {\n  return <div className=\"Options\">\n    <div className=\"PlayersAmount\">\n      <div>Select the amount of players: </div>\n      <div>\n        <PlayersAmount onPlayersAmountChange={onPlayersAmountChange} playersAmount={playersAmount} />\n      </div>\n    </div>\n  </div>;\n};\n\nconst mapStateToProps = (state) => ({\n  playersAmount: state.playersAmount\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onPlayersAmountChange(playersAmount) {\n    dispatch(setPlayersAmount(playersAmount));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Player from 'components/Player';\nimport Board from 'components/Board';\n\nconst PokerTable = ({playersAmount}) => {\n  const amount = parseInt(playersAmount, 10);\n\n  return <div className=\"PokerTable\">\n    {[...Array(amount)].map((x, i) =>\n      <Player number={i + 1} />\n    )}\n    <Board />\n  </div>;\n}\n\nconst mapStateToProps = (state) => ({\n  playersAmount: state.playersAmount\n});\n\nexport default connect(mapStateToProps)(PokerTable);\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport playersReducers from 'reducers/playersReducers';\nimport App from 'container/App';\n\nconst store = createStore(playersReducers);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.querySelector('#app')\n  );\n});\n","const initialState = {\n  playersAmount: 7\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_PLAYERS_AMOUNT':\n      return Object.assign({}, state, {playersAmount: action.playersAmount})\n    default:\n      return state;\n  }\n}\n","export const values = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A'];\nexport const suits = ['S', 'C', 'D', 'H'];\n"]}